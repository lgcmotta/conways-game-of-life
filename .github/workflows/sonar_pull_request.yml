name: Conway's Game of Life - PullRequest

on: 
  pull_request:
    types: [opened, synchronize, reopened]
  
jobs:
  test:
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'microsoft'
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          
      - name: Install Sonar Scanner
        shell: bash
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud Analysis
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_BASE: ${{ github.event.pull_request.base.ref }}
          PR_HEAD: ${{ github.event.pull_request.head.ref }}
          COVERAGE_REPORTS_DIR: ${{ github.workspace }}/reports
          QUALITY_GATE_WAIT: true
        run: |
          dotnet-sonarscanner begin \
          /k:"$SONAR_PROJECT_KEY" \
          /o:"$SONAR_ORGANIZATION" \
          /d:sonar.pullrequest.key="$PR_NUMBER" \
          /d:sonar.pullrequest.branch="$PR_HEAD" \
          /d:sonar.pullrequest.base="$PR_BASE" \
          /d:sonar.token="$SONAR_TOKEN" \
          /d:sonar.host.url="$SONAR_HOST_URL" \
          /d:sonar.qualitygate.wait=$QUALITY_GATE_WAIT \
          /d:sonar.cs.opencover.reportsPaths="$COVERAGE_REPORTS_DIR/**/*.opencover.xml"      
 
      - name: .NET Restore
        shell: bash
        run: dotnet restore
      
      - name: .NET Build
        shell: bash
        run: dotnet build --no-restore --configuration Release
                
      - name: .NET Test
        shell: bash
        env:
          COVERAGE_REPORTS_DIR: ${{ github.workspace }}/reports
        run: |
          dotnet test --no-restore --no-build \
          --collect "XPlat Code Coverage" \
          --results-directory $COVERAGE_REPORTS_DIR \
          --logger "GitHubActions;report-warnings=false" \
          --configuration Release \
          --verbosity m -- \
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover \
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.ExcludeByAttribute=CompilerGeneratedAttribute
          
      - name: End SonarCloud Analysis
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.token="$SONAR_TOKEN"